<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!--  The above schemas define extensions to basic configuration directives in XML -->

	<!--  This datasource is able to accept XA and NONXA drivers -->
	<bean id="dataSource" name="dataSource,datasource"
		class="com.atomikos.jdbc.nonxa.AtomikosNonXADataSourceBean" lazy-init="true"
		init-method="init" destroy-method="close" >
		<property name="uniqueResourceName" value="NONXADBMS" />
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="readOnly" value="false" />
		<property name="poolSize" value="1" />
		<property name="maxPoolSize" value="4" />
		<property name="minPoolSize" value="0" />
		<property name="testQuery" value="VALUES(1)" />
	</bean>
	
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" 
				init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true"/>
		<property name="transactionTimeout" value="${transaction.timeout}" />
 	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout" value="${transaction.timeout}" />
	</bean>

	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
		<property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
  	<tx:annotation-driven transaction-manager="transactionManager"/>

	<bean id="accountDao" lazy-init="true" scope="singleton"
		class="com.lse.spring.example.atm.AccountDaoJdbc">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	

</beans>